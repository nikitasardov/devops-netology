---
- name: Install Clickhouse
  hosts: clickhouse
  become: true
  handlers:
    - name: Start clickhouse service
      ansible.builtin.command: "clickhouse-server --daemon"
      changed_when: false
      tags:
        - clickhouse
        - start
  tasks:
    - name: Get clickhouse distrib
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
        dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
      with_items:
        - clickhouse-client
        - clickhouse-server
      tags:
        - clickhouse
        - distr
    - name: Get clickhouse common static
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
        dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
      tags:
        - clickhouse
        - distr
    - name: Install clickhouse packages
      ansible.builtin.yum:
        name:
          - "{{ item }}-{{ clickhouse_version }}.rpm"
        disable_gpg_check: true
        disablerepo: "*"
      with_items: "{{ clickhouse_packages }}"
      notify: Start clickhouse service
      when: not ansible_check_mode
      tags:
        - clickhouse
        - distr
    - name: Flush handlers
      meta: flush_handlers
      tags:
        - clickhouse
        - start
    - name: Start clickhouse service
      ansible.builtin.command: "clickhouse-server --daemon"
      changed_when: false
      tags:
        - clickhouse
        - start
    - name: Wait for Clickhouse to start
      ansible.builtin.wait_for:
        port: 8123
        delay: 5
        timeout: 60
      tags:
        - clickhouse
        - wait
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  become: true
  handlers:
    - name: Restart vector service
      ansible.builtin.shell: "pkill -f vector || true; /usr/local/bin/vector --config /etc/vector.toml &"
      tags:
        - vector
        - restart
  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector-{{ vector_version }}.tar.gz"
      tags:
        - vector
        - distr
    - name: Extract Vector
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_version }}.tar.gz"
        dest: "/opt/"
        remote_src: true
      when: not ansible_check_mode
      tags:
        - vector
        - distr
    - name: Create vector binary symlink
      ansible.builtin.file:
        src: "/opt/vector-x86_64-unknown-linux-gnu/bin/vector"
        dest: /usr/local/bin/vector
        state: link
      when: not ansible_check_mode
      tags:
        - vector
        - distr
    - name: Deploy vector config
      ansible.builtin.template:
        src: vector.toml.j2
        dest: "/etc/vector.toml"
        mode: '0644'
      notify: Restart vector service
      tags:
        - vector
        - config

- name: Install Nginx
  hosts: lighthouse
  become: true
  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      tags:
        - nginx
        - install
    - name: Install nginx
      ansible.builtin.apt:
        name: nginx
        state: present
      tags:
        - nginx
        - install
    - name: Start nginx
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true
      when: not ansible_check_mode
      tags:
        - nginx
        - start

- name: Install Lighthouse
  hosts: lighthouse
  become: true
  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      when: not ansible_check_mode
      tags:
        - lighthouse
        - nginx
        - start
  tasks:
    - name: Create lighthouse directory
      ansible.builtin.file:
        path: "{{ lighthouse_install_dir }}"
        state: directory
        mode: 0755
      tags:
        - lighthouse
        - install
    - name: Download Lighthouse
      ansible.builtin.get_url:
        url: "https://github.com/VKCOM/lighthouse/archive/{{ lighthouse_version }}.zip"
        dest: "/tmp/lighthouse-{{ lighthouse_version }}.zip"
      tags:
        - lighthouse
        - distr
    - name: Extract Lighthouse
      ansible.builtin.unarchive:
        src: "/tmp/lighthouse-{{ lighthouse_version }}.zip"
        dest: "/tmp/"
        remote_src: true
      when: not ansible_check_mode
      tags:
        - lighthouse
        - install
    - name: Copy Lighthouse files
      ansible.builtin.copy:
        src: "/tmp/lighthouse-{{ lighthouse_version }}/"
        dest: "{{ lighthouse_install_dir }}"
        mode: 0755
        remote_src: true
      when: not ansible_check_mode
      tags:
        - lighthouse
        - install
    - name: Deploy nginx config
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: "{{ lighthouse_nginx_config }}"
        mode: 0644
      notify: Restart nginx
      tags:
        - lighthouse
        - nginx
        - start
    - name: Enable nginx site
      ansible.builtin.file:
        src: "{{ lighthouse_nginx_config }}"
        dest: "/etc/nginx/sites-enabled/default"
        state: link
      notify: Restart nginx
      when: not ansible_check_mode
      tags:
        - lighthouse
        - nginx
        - start
