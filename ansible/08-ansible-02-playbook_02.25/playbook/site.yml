---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      ansible.builtin.command: "clickhouse-server --daemon"
      changed_when: false
  tasks:
    - name: Get clickhouse distrib
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
        dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
      with_items:
        - clickhouse-client
        - clickhouse-server
    - name: Get clickhouse common static
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
        dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
        disablerepo: "*"
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Start clickhouse service
      ansible.builtin.command: "clickhouse-server --daemon"
      changed_when: false
    - name: Wait for Clickhouse to start
      ansible.builtin.wait_for:
        port: 8123
        delay: 5
        timeout: 60
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  handlers:
    - name: Restart vector service
      ansible.builtin.command: "pkill -f vector || true && /usr/local/bin/vector --config /etc/vector.toml &"
  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector-{{ vector_version }}.tar.gz"
    - name: Extract Vector
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_version }}.tar.gz"
        dest: "/opt/"
        remote_src: true
    - name: Create vector binary symlink
      ansible.builtin.file:
        src: "/opt/vector-x86_64-unknown-linux-gnu/bin/vector"
        dest: /usr/local/bin/vector
        state: link
    - name: Deploy vector config
      ansible.builtin.template:
        src: vector.toml.j2
        dest: "/etc/vector.toml"
        mode: '0644'
      notify: Restart vector service
